{"version":3,"file":"static/js/375.f44d798d.chunk.js","mappings":"2QAGMA,EAAgBC,EAAAA,GAAAA,QAAH,sDAIbC,EAAeD,EAAAA,GAAAA,OAAH,+LAaZE,EAAgBF,EAAAA,GAAAA,IAAH,mJAObG,EAAaH,EAAAA,GAAAA,IAAH,6CAIVI,EAAuBJ,EAAAA,GAAAA,IAAH,+FAKpBK,EAAwBL,EAAAA,GAAAA,GAAH,+GAMrBM,EAAWN,EAAAA,GAAAA,GAAH,4CAIRO,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,2C,SChCD,SAASS,IAAgB,IAAD,YAC/BC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYH,GAASI,MAAK,SAAAC,GACxBV,EAAQU,EAAKA,MACbR,GAAU,kBACRQ,EAAKA,KAAKT,OACPU,KAAI,SAAAC,GACH,OAAOA,EAAMC,QAEdC,KAAK,SAEVV,GAASW,EAAAA,EAAAA,IAASL,EAAKA,KAAKM,YAAa,cAE1C,CAACX,KAGF,UAACpB,EAAD,YACE,SAAC,KAAD,CAAMgC,GAAE,iBAAErB,QAAF,IAAEA,GAAF,UAAEA,EAAUsB,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAnC,UACE,SAAChC,EAAD,CAAciC,KAAK,SAAnB,wBAGF,UAAChC,EAAD,YACE,gBAAKiC,IAAKlB,EAAOmB,IAAKvB,EAAKwB,kBAC3B,UAAClC,EAAD,YACE,wBAAKU,EAAKwB,kBACV,wCAAgBxB,EAAKyB,iBACrB,sCACA,uBAAIzB,EAAK0B,YACT,oCACA,uBAAIxB,WAGR,UAACX,EAAD,YACE,oDACA,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEwB,GAAG,OACHC,MAAO,CACLC,KAAI,iBAAEvB,QAAF,IAAEA,GAAF,UAAEA,EAAUsB,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAHnC,qBASF,SAAC3B,EAAD,WACE,SAACC,EAAD,CACEwB,GAAG,UACHC,MAAO,CACLC,KAAI,iBAAEvB,QAAF,IAAEA,GAAF,UAAEA,EAAUsB,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAHnC,2BAUJ,SAAC,EAAAO,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAC,KAAD","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledSection = styled.section`\n  background-color: #828282;\n`;\n\nconst StyledButton = styled.button`\n  width: 100px;\n  height: 30px;\n  background-color: #707070;\n  color: white;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding: 15px;\n  box-shadow: inset 0 0 2px 1px rgba(0, 0, 0, 0.3);\n`;\n\nconst StyledInfo = styled.div`\n  max-width: 600px;\n`;\n\nconst StyledAdditionalInfo = styled.div`\n  padding: 15px;\n  box-shadow: inset 0 0 2px 1px rgba(0, 0, 0, 0.3);\n`;\n\nconst StyledAdditionalLinks = styled.ul`\n  border-bottom: 2px solid rgba(0, 0, 0, 0.3);\n  padding: 15px;\n  list-style: none;\n`;\n\nconst StyledLi = styled.li`\n  font-size: 18px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: #f5f5f5;\n`;\n\nexport {\n  StyledSection,\n  StyledButton,\n  StyledWrapper,\n  StyledInfo,\n  StyledAdditionalInfo,\n  StyledAdditionalLinks,\n  StyledLi,\n  StyledLink,\n};\n","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { filmDetails, getImage } from 'components/TMDB-api';\nimport {\n  StyledSection,\n  StyledButton,\n  StyledWrapper,\n  StyledInfo,\n  StyledAdditionalInfo,\n  StyledAdditionalLinks,\n  StyledLi,\n  StyledLink,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const [film, setFilm] = useState({});\n  const [genres, setGenres] = useState('');\n  const [image, setImage] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    filmDetails(movieId).then(data => {\n      setFilm(data.data);\n      setGenres(() =>\n        data.data.genres\n          .map(genre => {\n            return genre.name;\n          })\n          .join(', ')\n      );\n      setImage(getImage(data.data.poster_path, 'w342'));\n    });\n  }, [movieId]);\n\n  return (\n    <StyledSection>\n      <Link to={location?.state?.from ?? '/'}>\n        <StyledButton type=\"button\">Go back</StyledButton>\n      </Link>\n\n      <StyledWrapper>\n        <img src={image} alt={film.original_title} />\n        <StyledInfo>\n          <h1>{film.original_title}</h1>\n          <p>User score: {film.vote_average}</p>\n          <h2>Overview</h2>\n          <p>{film.overview}</p>\n          <h2>Genres</h2>\n          <p>{genres}</p>\n        </StyledInfo>\n      </StyledWrapper>\n      <StyledAdditionalInfo>\n        <h2>Additional information</h2>\n        <StyledAdditionalLinks>\n          <StyledLi>\n            <StyledLink\n              to=\"cast\"\n              state={{\n                from: location?.state?.from ?? '/',\n              }}\n            >\n              Cast\n            </StyledLink>\n          </StyledLi>\n          <StyledLi>\n            <StyledLink\n              to=\"reviews\"\n              state={{\n                from: location?.state?.from ?? '/',\n              }}\n            >\n              Reviews\n            </StyledLink>\n          </StyledLi>\n        </StyledAdditionalLinks>\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <Outlet />\n        </Suspense>\n      </StyledAdditionalInfo>\n    </StyledSection>\n  );\n}\n"],"names":["StyledSection","styled","StyledButton","StyledWrapper","StyledInfo","StyledAdditionalInfo","StyledAdditionalLinks","StyledLi","StyledLink","Link","MovieDetails","location","useLocation","useState","film","setFilm","genres","setGenres","image","setImage","movieId","useParams","useEffect","filmDetails","then","data","map","genre","name","join","getImage","poster_path","to","state","from","type","src","alt","original_title","vote_average","overview","Suspense","fallback"],"sourceRoot":""}